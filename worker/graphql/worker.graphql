subscription NewJobsSubscription {
    job(where: {assigned_worker: {_is_null: true}}, order_by: [{created_at: asc}]) {
        id
    }
}

subscription DeleteJobsSubscription {
    delete_job(where: {assigned_worker: {_is_null: true}}) {
        id
    }
}

subscription MyJobsSubscription($myId: uuid!) {
    job(where: {assigned_worker: {_eq: $myId}}, order_by: [{created_at: asc}]) {
        id
    }
}

fragment FullJob on job {
    id
    workspace_id
    url
    file_upload

    progress
    progress_stage

    name
    description
    path
    options
}

mutation ClaimJob($myId: uuid!) {
    claim_job(args: {worker_id: $myId}) {
        ...FullJob
    }
}

mutation ClaimDeleteJob($myId: uuid!) {
    claim_delete_job(args: {worker_id: $myId}) {
        id
        file {
            id
            provider_id
        }
    }
}

mutation UpdateJobProgress($jobId: uuid!, $progressStage: String!, $progress: numeric!) {
    update_job_by_pk(pk_columns: {id: $jobId}, _set: {progress_stage: $progressStage, progress: $progress}) {
        ...FullJob
    }
}

mutation CommitJob($jobId: uuid!, $file: file_insert_input!) {
    delete_job_by_pk(id: $jobId) {
        __typename
        id
        url
        name
    }
    insert_file_one(object: $file) {
        __typename
        id
        name
    }
}

mutation CommitDeleteJob($jobId: uuid!, $fileId: uuid!) {
    delete_delete_job_by_pk(id: $jobId) {
        id
    }
    delete_file_by_pk(id: $fileId) {
        id
    }
}